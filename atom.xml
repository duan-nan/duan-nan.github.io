<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-01-29T07:47:49.973Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/04/16/Shiro%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://example.com/2021/04/16/Shiro%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2021-04-16T05:24:27.026Z</published>
    <updated>2021-01-29T07:47:49.973Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Shiro（二）"><a href="#Shiro（二）" class="headerlink" title="Shiro（二）"></a>Shiro（二）</h1><h2 id="1-1、登录拦截实现"><a href="#1-1、登录拦截实现" class="headerlink" title="1.1、登录拦截实现"></a>1.1、登录拦截实现</h2><center>login.html</center><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>登陆<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>\=<span class="string">&quot;$&#123;msg&#125;&quot;</span> <span class="attr">style</span>\=<span class="string">&quot;color: red&quot;</span>\&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">th:action</span>\=<span class="string">&quot;@&#123;/login&#125;&quot;</span>\&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span>用户名: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>\=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>\=<span class="string">&quot;username&quot;</span> <span class="attr">placeholder</span>\=<span class="string">&quot;用户名&quot;</span>\&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span>密码: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>\=<span class="string">&quot;password&quot;</span> <span class="attr">name</span>\=<span class="string">&quot;password&quot;</span> <span class="attr">placeholder</span>\=<span class="string">&quot;密码&quot;</span>\&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>\=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>\=<span class="string">&quot;登陆&quot;</span>\&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><p>设置<strong>Shiro</strong>内置过滤器</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span>  </span><br><span class="line"><span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(<span class="meta">@Qualifier(&quot;securityManger&quot;)</span> DefaultWebSecurityManager defaultWebSecurityManager)</span></span>&#123;  </span><br><span class="line">    ShiroFilterFactoryBean bean = <span class="keyword">new</span> ShiroFilterFactoryBean();  </span><br><span class="line"> <span class="comment">//设置安全管理器  </span></span><br><span class="line"> bean.setSecurityManager(defaultWebSecurityManager);  </span><br><span class="line">  </span><br><span class="line"> <span class="comment">//添加shiro内置过滤器  </span></span><br><span class="line"> /\*  </span><br><span class="line"> \* anon: 无需认证就可以访问  </span><br><span class="line"> \* authc:必须认证了之后才可以访问  </span><br><span class="line"> \* user: 必须拥有 记住我 功能才能用户  </span><br><span class="line"> \* perms: 拥有对某个资源的权限才能访问  </span><br><span class="line"> \* role:必须拥有某个用户权限才可以访问  </span><br><span class="line"> \*/ Map&lt;String,String&gt; filterMap = <span class="keyword">new</span> HashMap();  </span><br><span class="line"> filterMap.put(<span class="string">&quot;/user/add&quot;</span>,<span class="string">&quot;authc&quot;</span>);  </span><br><span class="line"> filterMap.put(<span class="string">&quot;/user/update&quot;</span>,<span class="string">&quot;authc&quot;</span>);  </span><br><span class="line">  </span><br><span class="line"> bean.setFilterChainDefinitionMap(filterMap);  </span><br><span class="line"> <span class="comment">//如果没有权限执行LoginUrl  </span></span><br><span class="line"> bean.setLoginUrl(<span class="string">&quot;/toLogin&quot;</span>);  </span><br><span class="line">  </span><br><span class="line"> <span class="keyword">return</span> bean;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-2、实现认证"><a href="#1-2、实现认证" class="headerlink" title="1.2、实现认证"></a>1.2、实现认证</h2><p>controller接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/login&quot;)</span>  </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String username,String password,Model model)</span></span>&#123;  </span><br><span class="line">    <span class="comment">//1.获取当前的用户  </span></span><br><span class="line"> Subject subject = SecurityUtils.getSubject();  </span><br><span class="line"> <span class="comment">//2.封装用户的数据并且加密  </span></span><br><span class="line"> UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(username, password);  </span><br><span class="line">  </span><br><span class="line"> <span class="keyword">try</span> &#123;  </span><br><span class="line">        <span class="comment">//3.登陆用户  </span></span><br><span class="line"> subject.login(token);  </span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;  </span><br><span class="line"> &#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;  </span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;用户名错误！&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;  </span><br><span class="line"> &#125;<span class="keyword">catch</span> (IncorrectCredentialsException e)&#123;  </span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>,<span class="string">&quot;密码错误！&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>UserRealm</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//认证  </span></span><br><span class="line"><span class="meta">@Override</span>  </span><br><span class="line"><span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;  </span><br><span class="line">    System.out.println(<span class="string">&quot;执行了\==》认证&quot;</span>);  </span><br><span class="line"> <span class="comment">//用户名，密码  </span></span><br><span class="line"> String name = <span class="string">&quot;admin&quot;</span>;  </span><br><span class="line"> String password = <span class="string">&quot;123456&quot;</span>;  </span><br><span class="line">  </span><br><span class="line"> UsernamePasswordToken token = (UsernamePasswordToken) authenticationToken;  </span><br><span class="line"> <span class="keyword">if</span> (!token.getUsername().equals(name))&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;<span class="comment">//抛出异常  </span></span><br><span class="line"> &#125;  </span><br><span class="line">    <span class="comment">//密码认证，由shiro来做  </span></span><br><span class="line">  </span><br><span class="line"> <span class="keyword">return</span> <span class="keyword">new</span> SimpleAuthenticationInfo(<span class="string">&quot;&quot;</span>,password,<span class="string">&quot;&quot;</span>);  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-3、Shiro整合MyBatis"><a href="#1-3、Shiro整合MyBatis" class="headerlink" title="1.3、Shiro整合MyBatis"></a>1.3、Shiro整合MyBatis</h2><h3 id="1-3-1、导入Mybatis的pom"><a href="#1-3-1、导入Mybatis的pom" class="headerlink" title="1.3.1、导入Mybatis的pom"></a>1.3.1、导入Mybatis的pom</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--mysql--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.22<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--log4j--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--druid--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--MyBatis适配Spring Boot--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--Lombok--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-3-2、设置项目的配置文件"><a href="#1-3-2、设置项目的配置文件" class="headerlink" title="1.3.2、设置项目的配置文件"></a>1.3.2、设置项目的配置文件</h3><center style="color:orange;font-size:20px">application.properties</center><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">mybatis.type-aliases-package\=com.duan.pojo</span>  <span class="string"></span></span><br><span class="line"><span class="meta">mybatis.mapper-locations\=classpath</span>:<span class="string">mapper/\*.xml</span></span><br></pre></td></tr></table></figure><center style="color:orange;font-size:20px">application.yml</center><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span>  </span><br><span class="line">  <span class="attr">datasource:</span>  </span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span>  </span><br><span class="line">    <span class="attr">password:</span> <span class="string">root</span>  </span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://localhost:3306/mybatis?serverTomezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf-8</span>  </span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span>  </span><br><span class="line"> <span class="attr">type:</span> <span class="string">com.alibaba.druid.pool.DruidDataSource</span>  </span><br><span class="line">  </span><br><span class="line"> <span class="comment">#SpringBoot默认是不注入这些的，需要自己绑定  </span></span><br><span class="line"> <span class="comment">#druid数据源专有配置  </span></span><br><span class="line"> <span class="attr">initialSize:</span> <span class="number">5</span>  </span><br><span class="line">    <span class="attr">minIdle:</span> <span class="number">5</span>  </span><br><span class="line">    <span class="attr">maxActive:</span> <span class="number">20</span>  </span><br><span class="line">    <span class="attr">maxWait:</span> <span class="number">60000</span>  </span><br><span class="line">    <span class="attr">timeBetweenEvictionRunsMillis:</span> <span class="number">60000</span>  </span><br><span class="line">    <span class="attr">minEvictableIdleTimeMillis:</span> <span class="number">300000</span>  </span><br><span class="line">    <span class="attr">validationQuery:</span> <span class="string">SELECT</span> <span class="number">1</span> <span class="string">FROM</span> <span class="string">DUAL</span>  </span><br><span class="line">    <span class="attr">testWhileIdle:</span> <span class="literal">true</span>  </span><br><span class="line">    <span class="attr">testOnBorrow:</span> <span class="literal">false</span>  </span><br><span class="line">    <span class="attr">testOnReturn:</span> <span class="literal">false</span>  </span><br><span class="line">    <span class="attr">poolPreparedStatements:</span> <span class="literal">true</span>  </span><br><span class="line">  </span><br><span class="line">     <span class="comment">#配置监控统计拦截的filters，stat：监控统计、log4j：日志记录、wall：防御sql注入  </span></span><br><span class="line">  <span class="comment">#如果允许报错，java.lang.ClassNotFoundException: org.apache.Log4j.Properity  </span></span><br><span class="line"> <span class="comment">#则导入log4j 依赖就行  </span></span><br><span class="line"> <span class="attr">filters:</span> <span class="string">stat,wall,log4j</span>  </span><br><span class="line">    <span class="attr">maxPoolPreparedStatementPerConnectionSize:</span> <span class="number">20</span>  </span><br><span class="line">    <span class="attr">useGlobalDataSourceStat:</span> <span class="literal">true</span>  </span><br><span class="line">    <span class="attr">connectionoProperties:</span> <span class="string">druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500</span></span><br></pre></td></tr></table></figure><h3 id="1-3-3、权限以及页面跳转设置"><a href="#1-3-3、权限以及页面跳转设置" class="headerlink" title="1.3.3、权限以及页面跳转设置"></a>1.3.3、权限以及页面跳转设置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//ShiroFilterFactoryBean 3  </span></span><br><span class="line"><span class="meta">@Bean</span>  </span><br><span class="line"><span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(<span class="meta">@Qualifier(&quot;securityManger&quot;)</span> DefaultWebSecurityManager defaultWebSecurityManager)</span></span>&#123;  </span><br><span class="line">    ShiroFilterFactoryBean bean = <span class="keyword">new</span> ShiroFilterFactoryBean();  </span><br><span class="line"> <span class="comment">//设置安全管理器  </span></span><br><span class="line"> bean.setSecurityManager(defaultWebSecurityManager);  </span><br><span class="line">  </span><br><span class="line"> <span class="comment">//添加shiro内置过滤器  </span></span><br><span class="line"> \*  </span><br><span class="line"> \* anon: 无需认证就可以访问  </span><br><span class="line"> \* authc:必须认证了之后才可以访问  </span><br><span class="line"> \* user: 必须拥有 记住我 功能才能用户  </span><br><span class="line"> \* perms: 拥有对某个资源的权限才能访问  </span><br><span class="line"> \* role:必须拥有某个用户权限才可以访问  </span><br><span class="line"> \*Map&lt;String,String&gt; filterMap = <span class="keyword">new</span> HashMap();  </span><br><span class="line"> filterMap.put(<span class="string">&quot;user\*&quot;</span>,<span class="string">&quot;authc&quot;</span>);  </span><br><span class="line">  </span><br><span class="line"> <span class="comment">//授权 正常情况下未授权会跳转到未授权页面  </span></span><br><span class="line"> filterMap.put(<span class="string">&quot;/user/add&quot;</span>,<span class="string">&quot;perms[user:add]&quot;</span>);  </span><br><span class="line"> filterMap.put(<span class="string">&quot;/user/update&quot;</span>,<span class="string">&quot;perms[user:update]&quot;</span>);  </span><br><span class="line"> filterMap.put(<span class="string">&quot;/logout&quot;</span>,<span class="string">&quot;logout&quot;</span>);<span class="comment">//注销  </span></span><br><span class="line">  </span><br><span class="line"> bean.setFilterChainDefinitionMap(filterMap);  </span><br><span class="line"> <span class="comment">//如果没有权限执行LoginUrl  </span></span><br><span class="line"> bean.setLoginUrl(<span class="string">&quot;/toLogin&quot;</span>);  </span><br><span class="line"> bean.setUnauthorizedUrl(<span class="string">&quot;/noauth&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> bean;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><center style="color:orange;font-size:20px">Controller</center><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toIndex</span><span class="params">(Model model)</span> </span>&#123;  </span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;hello ,hiro&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/add&quot;)</span>  </span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">toAdd</span><span class="params">(Model model)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;user/add&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/update&quot;)</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toUpdate</span><span class="params">(Model model)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;user/update&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/toLogin&quot;)</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">tiLogin</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/login&quot;)</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">login</span><span class="params">(String username, String password, Model model)</span> </span>&#123;  </span><br><span class="line">        <span class="comment">//1.获取当前的用户  </span></span><br><span class="line"> Subject subject = SecurityUtils.getSubject();  </span><br><span class="line"> <span class="comment">//2.封装用户的数据并且加密  </span></span><br><span class="line"> UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(username, password);  </span><br><span class="line">  </span><br><span class="line"> <span class="keyword">try</span> &#123;  </span><br><span class="line">            <span class="comment">//3.登陆用户  </span></span><br><span class="line"> subject.login(token);  </span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;  </span><br><span class="line"> &#125; <span class="keyword">catch</span> (UnknownAccountException e) &#123;  </span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;用户名错误！&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;  </span><br><span class="line"> &#125; <span class="keyword">catch</span> (IncorrectCredentialsException e) &#123;  </span><br><span class="line">            model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;密码错误！&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;login&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/noauth&quot;)</span>  </span><br><span class="line">    <span class="meta">@ResponseBody</span>  </span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">unauthorized</span><span class="params">()</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;未经授权无法访问该页面！&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4、Shiro整合Thymeleaf"><a href="#1-4、Shiro整合Thymeleaf" class="headerlink" title="1.4、Shiro整合Thymeleaf"></a>1.4、Shiro整合Thymeleaf</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Shiro（二）&quot;&gt;&lt;a href=&quot;#Shiro（二）&quot; class=&quot;headerlink&quot; title=&quot;Shiro（二）&quot;&gt;&lt;/a&gt;Shiro（二）&lt;/h1&gt;&lt;h2 id=&quot;1-1、登录拦截实现&quot;&gt;&lt;a href=&quot;#1-1、登录拦截实现&quot; class=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/04/16/%E4%BD%BF%E7%94%A8%20hexo%20%E6%A1%86%E6%9E%B6%20%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2021/04/16/%E4%BD%BF%E7%94%A8%20hexo%20%E6%A1%86%E6%9E%B6%20%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2021-04-16T05:23:24.273Z</published>
    <updated>2021-04-16T05:23:31.634Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello，各位小伙伴大家好，今天带大家来使用-hexo框架-来从零搭建个人博客！"><a href="#Hello，各位小伙伴大家好，今天带大家来使用-hexo框架-来从零搭建个人博客！" class="headerlink" title="Hello，各位小伙伴大家好，今天带大家来使用 hexo框架 来从零搭建个人博客！"></a>Hello，各位小伙伴大家好，今天带大家来使用 hexo框架 来从零搭建个人博客！</h1><p><a href="https://blog.csdn.net/nanshen__/article/details/115739197">使用 hexo 框架 快速搭建个人博客（二）</a><br>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><h1 id="一、什么是-hexo-框架-？"><a href="#一、什么是-hexo-框架-？" class="headerlink" title="一、什么是 hexo 框架 ？"></a>一、什么是 hexo 框架 ？</h1><p><img src="https://img-blog.csdnimg.cn/20210415205113791.jpg#pic_" alt="在这里插入图片描述"></p><blockquote><p><strong>hexo框架</strong> 是一个快速、简洁且高效的博客框架，它支持 GitHub Flavored Markdown 的所有功能，甚至可以整合 Octopress 的大多数插件。除此之外它可以与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成。在众多美观、强大、可定制的主题中选择；使用任何兼容的模板引擎创建自己的主题。</p></blockquote><h1 id="二、-环境搭建"><a href="#二、-环境搭建" class="headerlink" title="二、 环境搭建"></a>二、 环境搭建</h1><h2 id="1、Node-js-下载安装"><a href="#1、Node-js-下载安装" class="headerlink" title="1、Node.js 下载安装"></a>1、Node.js 下载安装</h2><p>NodeJS 管网：<a href="https://nodejs.org/zh-cn/">https://nodejs.org/zh-cn/</a><br><img src="https://img-blog.csdnimg.cn/20210415131126413.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>下载成功之后进行nodejs的安装，选择安装路径之后（不建议装在C盘），一路next就可以了！！（由于我之前已经安装过了，这里就不再进行安装）安装成功之后在cmd中输入 <strong>node -v 和 npm -v</strong> 显示出node的版本号 和 npm的版本号 即为安装成功！<br><img src="https://img-blog.csdnimg.cn/20210415131542678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="2、npm-淘宝镜像设置"><a href="#2、npm-淘宝镜像设置" class="headerlink" title="2、npm 淘宝镜像设置"></a>2、npm 淘宝镜像设置</h2><p>通常我们使用npm下载的时候下载速度非常慢，经常还会出现卡顿，命令窗口无响应的情况！！！为了避免这种情况我们选择更换镜像，我们选择使用淘宝的镜像来进行下载，淘宝的速度可谓是起飞~~~</p><p>再cmd中输入这段命令 <strong>npm install -g cnpm –egistry=<a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></strong>  将镜像改为淘宝镜像来使用，以后我们需要下载是就要使用 <strong>npms</strong> 来进行操作！<br><img src="https://img-blog.csdnimg.cn/20210415131831351.png" alt="在这里插入图片描述"><br>现在就已经安装成功了！！<br><img src="https://img-blog.csdnimg.cn/20210415131842364.png" alt="在这里插入图片描述"></p><h2 id="3、hexo框架-下载安装"><a href="#3、hexo框架-下载安装" class="headerlink" title="3、hexo框架 下载安装"></a>3、hexo框架 下载安装</h2><p>在cmd 中输入   <strong>cnpm install -g hexo-cli</strong> 命令开始 hexo 的安装！<br><img src="https://img-blog.csdnimg.cn/20210415132216656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>当安装完成之后再输入 <strong>hexo -v</strong> 命令来查看 hexo是否安装成功！<br><img src="https://img-blog.csdnimg.cn/20210415132302764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>若查出hexo-cli的版本号即为安装成功！（在查询 hexo 的版本时也同时查询出了node的版本信息，说明 hexo 框架是基于 node的😁）</p><h1 id="三、开始搭建博客！"><a href="#三、开始搭建博客！" class="headerlink" title="三、开始搭建博客！"></a>三、开始搭建博客！</h1><p>环境已经搭建完成了，接下来我们就要  <strong>正式开始搭建博客了</strong> ！（🤩冲冲冲~~~）<br><img src="https://img-blog.csdnimg.cn/20210415205319112.gif#pic_center" alt="在这里插入图片描述"></p><h2 id="1、新建目录进行初始化"><a href="#1、新建目录进行初始化" class="headerlink" title="1、新建目录进行初始化"></a>1、新建目录进行初始化</h2><p>首先我们新建一个文件夹（建在哪里都可以）<img src="https://img-blog.csdnimg.cn/20210415133415366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来我们点击进入新建的文件夹中，之后在导航栏输入<strong>cmd</strong>进入cmd命令窗口！<br><img src="https://img-blog.csdnimg.cn/20210415133559665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210415133611686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样cmd打开的起始位置就是在该文件夹下！<br><img src="https://img-blog.csdnimg.cn/20210415133640876.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>接下来我们在cmd命令窗口中输入 <strong>hexo init</strong> 命令开始项目的初始化！<img src="https://img-blog.csdnimg.cn/20210415133814303.png" alt="在这里插入图片描述"><br>当出现 <strong>INFO  Start blogging with Hexo!</strong>  时说明博客框架 <strong>初始化 成功</strong>！<br><img src="https://img-blog.csdnimg.cn/20210415133852384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>初始化成功之后大家就会发现文件夹中多出了好多东西，这些都是什么呢？node_modules 主要是存放依赖的，source目录中存放的是个人的博客，theme中存放的就是大家最关心的<strong>主题</strong>啦😉（谁不希望自己的博客漂漂亮亮的呢）<br><img src="https://img-blog.csdnimg.cn/20210415134317240.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="2、博客启动！！！！"><a href="#2、博客启动！！！！" class="headerlink" title="2、博客启动！！！！"></a>2、博客启动！！！！</h2><p><img src="https://img-blog.csdnimg.cn/20210415205346785.gif#pic_center" alt="在这里插入图片描述"></p><p>没想到吧？!刚初始化完毕就启动了？？？？😱   没错就是要启动了<br>输入 <strong>hexo s</strong> 命令 来启动我们的博客！！<br><img src="https://img-blog.csdnimg.cn/20210415134759573.png" alt="在这里插入图片描述"><br>ヾ(≧▽≦*)o 启动成功！！！！！！！！！！！！！！！！😁😁😁😁</p><h2 id="3、本地访问"><a href="#3、本地访问" class="headerlink" title="3、本地访问"></a>3、本地访问</h2><p>上面已经提示了，博客占用了本地的4000端口！<br>啊啊啊，激动的心，颤抖的手。😶😶<br><img src="https://img-blog.csdnimg.cn/20210415135014443.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>哦哦哦~~~~~~~~~~~~~~~~~~~~~~~~~~<br>本地博客搭建成功！！！！👻👻👻👻👻<br><img src="https://img-blog.csdnimg.cn/20210415135144482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="本地md文件上传！"><a href="#本地md文件上传！" class="headerlink" title="本地md文件上传！"></a>本地md文件上传！</h2><p>之前也说过了，这个文件夹是存放个人静态博客的！那我就把我尘封多年的Markdown写的笔记拿出来试试😚😚<br><img src="https://img-blog.csdnimg.cn/20210415135545845.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来进入cmd 关闭 服务，按住 <strong>Ctrl + C</strong>，接下来输入Y即可停止服务！！！<br><img src="https://img-blog.csdnimg.cn/20210415135647405.png" alt="在这里插入图片描述"><br>接下来我们使用 <strong>hexo clean</strong> 清理一下内存！ 接下来使用 <strong>hexo g</strong> 来重新生成一下<br><img src="https://img-blog.csdnimg.cn/20210415135831637.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210415135854683.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>看到这里了吗？ 我新添加的一篇Maekdown笔记已经加载进去了！！😀😀</p><p>加下来再次启动服务！！ <strong>hexo s</strong><br><img src="https://img-blog.csdnimg.cn/2021041514000814.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210415140051379.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>哦哦哦~~~~~~~~ 很明显我新添加的博客已经展示出来了😝😝😝<br><img src="https://img-blog.csdnimg.cn/20210415205416109.gif#pic_center" alt="在这里插入图片描述"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>以上就是本期个人博客的在本地的快速搭建，下期将带大家更换博客主题以及将博客发布在GitHub上和Gitee上。            <a href="https://blog.csdn.net/nanshen__/article/details/115739197">使用 hexo 框架 快速搭建个人博客（二）</a><br><strong>我是楠橘星，期待大家的关注！😀😀😀😀</strong></p><p><strong>树苗如果因为怕痛而拒绝修剪，那就永远不会成材。</strong><br><img src="https://img-blog.csdnimg.cn/20210415205433980.jpg" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hello，各位小伙伴大家好，今天带大家来使用-hexo框架-来从零搭建个人博客！&quot;&gt;&lt;a href=&quot;#Hello，各位小伙伴大家好，今天带大家来使用-hexo框架-来从零搭建个人博客！&quot; class=&quot;headerlink&quot; title=&quot;Hello，各位小伙</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/04/16/%E4%BD%BF%E7%94%A8%20hexo%20%E6%A1%86%E6%9E%B6%20%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://example.com/2021/04/16/%E4%BD%BF%E7%94%A8%20hexo%20%E6%A1%86%E6%9E%B6%20%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2021-04-16T05:23:11.668Z</published>
    <updated>2021-04-16T05:23:19.053Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hello，各位小伙伴大家好，今天带大家来更换-hexo框架-的主题-以及将-个人博客发布到-GitHub-和-Gitee上面！"><a href="#Hello，各位小伙伴大家好，今天带大家来更换-hexo框架-的主题-以及将-个人博客发布到-GitHub-和-Gitee上面！" class="headerlink" title="Hello，各位小伙伴大家好，今天带大家来更换 hexo框架 的主题 以及将 个人博客发布到 GitHub 和 Gitee上面！"></a>Hello，各位小伙伴大家好，今天带大家来更换 hexo框架 的主题 以及将 个人博客发布到 GitHub 和 Gitee上面！</h1><p><img src="https://img-blog.csdnimg.cn/20210415204645841.gif#pic_center" alt="在这里插入图片描述"><br>咱接上一篇文章来说，没有看过的小伙伴可以去看看<a href="https://blog.csdn.net/nanshen__/article/details/115721089">使用 hexo 框架 快速搭建个人博客（一）</a></p><p>@<a href="%E6%96%87%E7%AB%A0%E7%9B%AE%E5%BD%95">TOC</a></p><h1 id="一、hexo-主题更换！！"><a href="#一、hexo-主题更换！！" class="headerlink" title="一、hexo 主题更换！！"></a>一、hexo 主题更换！！</h1><p>相信博客的界面是大家都最关注的，也是大家最期待的吧。接下来冲起来~~~</p><h2 id="1、选择自己喜欢的主题"><a href="#1、选择自己喜欢的主题" class="headerlink" title="1、选择自己喜欢的主题"></a>1、选择自己喜欢的主题</h2><h3 id="1-1、hexo-官方提供的主题仓库"><a href="#1-1、hexo-官方提供的主题仓库" class="headerlink" title="1-1、hexo 官方提供的主题仓库"></a>1-1、hexo 官方提供的主题仓库</h3><p>首先进入 <strong>hexo</strong> 的官网：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a><br><img src="https://img-blog.csdnimg.cn/20210415210359310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_14,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>进入之后大家就可以发现导航栏中又主题的选项，大家点击主题，<br><img src="https://img-blog.csdnimg.cn/20210415210532757.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210415210644194.png" alt="在这里插入图片描述">进入之后大家会发现 hexo 真的是超级棒，给我们提供了几百款不同的主题供大家使用！</p><p>接下来我们下载一款自己想要使用的博客主题！！<br><img src="https://img-blog.csdnimg.cn/20210415211033892.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h3 id="1-2、用户自己设计的主题-大家也可以自己去设计"><a href="#1-2、用户自己设计的主题-大家也可以自己去设计" class="headerlink" title="1-2、用户自己设计的主题(大家也可以自己去设计)"></a>1-2、用户自己设计的主题(大家也可以自己去设计)</h3><p>同上面的操作，只是需要大家自己去寻找漂亮的主题，有些漂亮的主题并没有开源，大家可以通过交流群等途径获取，主题的更换和上面的操作是大同小异的！这里我就不再作展示了。<br><img src="https://img-blog.csdnimg.cn/20210415211542873.gif#pic_center" alt="在这里插入图片描述"></p><h2 id="2、主题更换"><a href="#2、主题更换" class="headerlink" title="2、主题更换"></a>2、主题更换</h2><p>我这里已经下载好了一个主题了，大家只需要对主题进行解压。<br><img src="https://img-blog.csdnimg.cn/20210415211620809.png" alt="在这里插入图片描述"><br>这就是下载的主题的大致的目录结构了。<br><img src="https://img-blog.csdnimg.cn/20210415211718354.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们返回上一级，将文件夹进行拷贝，拷贝到我们bolg文件夹下的theme下。<br><img src="https://img-blog.csdnimg.cn/202104152117493.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210415211930960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里已经拷贝过来了，接下来我们需要对hexo的配置文件（**_config.yml**）进行修改，更改其中主题的选择！<br><img src="https://img-blog.csdnimg.cn/2021041521232478.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>我们将这里的 <strong>landspace</strong>  修改为我们的目录名（即是 <strong>Cxo</strong>）</p><p>修改完毕之后，在 hexo 中打开 cmd，一次输入 <strong>hexo clean 、 hexo g 、hexo s（清理，重新升成，开启）</strong> 的命令，这样我们的hexokinase就跑起来了！<br><img src="https://img-blog.csdnimg.cn/20210415215657985.png" alt="在这里插入图片描述"><br>接下来我们去本地 4000 端口 进行访问！<br>没有出错的话就直接可以看到效果了！！！</p><h3 id="Error-这里可能会出现一个问题"><a href="#Error-这里可能会出现一个问题" class="headerlink" title="Error  这里可能会出现一个问题"></a>Error  这里可能会出现一个问题</h3><p><img src="https://img-blog.csdnimg.cn/20210415220230443.png" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20210415215823666.png" alt="在这里插入图片描述"><br>Error:<br><strong>xtends includes/layout.pug block content include includes/recent-posts.pug include includes/partial/</strong>**<br>解决方案:</p><p>执行如下命令</p><pre><code>npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive</code></pre><p><img src="https://img-blog.csdnimg.cn/20210415220152226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样就执行完成了，接下来，我们重新执行 <strong>hexo clean 、 hexo g 、hexo s</strong> 的命令，再去浏览器看一下。<br><img src="https://img-blog.csdnimg.cn/2021041522040411.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>耶耶耶，主题更换成功！！<br><img src="https://img-blog.csdnimg.cn/20210415220505950.gif#pic_center" alt="在这里插入图片描述"></p><h1 id="二、将我们的-博客发布到Github-Gitee-上"><a href="#二、将我们的-博客发布到Github-Gitee-上" class="headerlink" title="二、将我们的 博客发布到Github/Gitee 上"></a>二、将我们的 博客发布到Github/Gitee 上</h1><p>关于Glthub/Gitee的基本注册的操作我就不再教大家了，大部分小伙伴应该都会注册！</p><h2 id="1、发布在-GitHub-上"><a href="#1、发布在-GitHub-上" class="headerlink" title="1、发布在 GitHub 上"></a>1、发布在 GitHub 上</h2><p>我们直接新建库，点击 <strong>New repostiory</strong><br><img src="https://img-blog.csdnimg.cn/2021041522141766.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>这里需要注意一下，Repository的名字是必须按这种格式来编写！！！</p><pre><code> Github用户名 .github.io         </code></pre><p><img src="https://img-blog.csdnimg.cn/20210415221356943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>创建成功之后这个库是空的~~<br><img src="https://img-blog.csdnimg.cn/20210415221819908.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来我们就开始将本地hexo博客上传到github上！！<br>我们在本地博客中打开cmd   输入一下命令<strong>cnpm install –save hexo-deployer-git</strong><br>安装  <strong>hexo-deployer-git</strong>  插件包<br><img src="https://img-blog.csdnimg.cn/2021041522285147.png" alt="在这里插入图片描述"></p><p>想要发布到Github上我们需要对本地hexo博客配置文件（**_config.xml**）进行配置<br>type 后面填写 git<br>repo 后面填写你自己git上对应的地址<br><img src="https://img-blog.csdnimg.cn/20210415223317795.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>branch 后面填写 master<br><img src="https://img-blog.csdnimg.cn/20210415223211997.png" alt="在这里插入图片描述"></p><p>接下来我们将我们的本地项目部署到Github上，你们在执行命令的过程中会<strong>需要你们输入你们Github的用户名和密码</strong>，因为我这里做了设置，所以不需要输入就可以上传！<br><img src="https://img-blog.csdnimg.cn/20210415223923190.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>上传完之后目录结构大致就是这个样子<br><img src="https://img-blog.csdnimg.cn/20210415225045364.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>接下来将自己的库名输到浏览器地址栏中！！！！！！<br><img src="https://img-blog.csdnimg.cn/20210415225222408.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210415225237456.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>发布成功！！！！！！！！<img src="https://img-blog.csdnimg.cn/20210415225257244.gif#pic_center" alt="在这里插入图片描述"></p><h2 id="2、发布在-Gitee-上"><a href="#2、发布在-Gitee-上" class="headerlink" title="2、发布在 Gitee 上"></a>2、发布在 Gitee 上</h2><p>我相信聪明的你们也一定能够举一反三在Gitee上发布自己的博客！这里就不多做口舌了！</p><p><img src="https://img-blog.csdnimg.cn/20210415230720956.gif#pic_center" alt="在这里插入图片描述"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这期关于 hexo 快速搭建博客的教程就到这里了，希望能够给大家带来帮助。感谢大家的观看！<br><strong>我是楠橘星，期待大家的关注！😀😀😀😀</strong></p><p><strong>树苗如果因为怕痛而拒绝修剪，那就永远不会成材。</strong><br><img src="https://img-blog.csdnimg.cn/20210415230903834.jpg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L25hbnNoZW5fXw==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Hello，各位小伙伴大家好，今天带大家来更换-hexo框架-的主题-以及将-个人博客发布到-GitHub-和-Gitee上面！&quot;&gt;&lt;a href=&quot;#Hello，各位小伙伴大家好，今天带大家来更换-hexo框架-的主题-以及将-个人博客发布到-GitHub-和-</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/04/15/Shiro%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://example.com/2021/04/15/Shiro%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2021-04-15T05:55:13.377Z</published>
    <updated>2021-01-28T12:44:24.369Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Shiro-框架-一）"><a href="#Shiro-框架-一）" class="headerlink" title="Shiro 框架(一）"></a>Shiro 框架(一）</h1><h2 id="1-1、什么是Shiro？"><a href="#1-1、什么是Shiro？" class="headerlink" title="1.1、什么是Shiro？"></a>1.1、什么是Shiro？</h2><ul><li>Apache Shiro 是一个 <strong>Java</strong> 的安全（权限）框架。</li><li>Shiro 可以非常轻易的开发出足够好的应用，其不仅仅可以在JavaSE环境中，还可以使用在JavaEE环境中。</li><li>Shiro 可以完成，认证，授权，加密，会话管理，Web集成，缓存等。</li><li>下载地址：<a href="http://shiro.apache.org/">shiro</a><br>![[Pasted image 20210128150538.png]]</li></ul><h2 id="1-2、有哪些功能？"><a href="#1-2、有哪些功能？" class="headerlink" title="1.2、有哪些功能？"></a>1.2、有哪些功能？</h2><p>![[Pasted image 20210128150755.png]]</p><ul><li><strong>Authentication</strong>:  身份认证、登陆，验证用户是不是拥有相对应的身份；</li><li><strong>Authorization</strong>：授权，即是权限认证，验证某个已经认证的用户是否拥有某个权限，即判断用户可以进行什么操作。eg：验证某个用户拥有某个角色，或者细粒度的验证某个用户多某个资源资源是否具有某个权限！</li><li><strong>Session Mangerment</strong>: 会话管理，即用户登录一次就是一个会话，再没退出之前，他的信息都存在于会话中；会话可以是普通的JavaSE环境，也可以是JavaEE环境（Web环境）</li><li><strong>Cryptography</strong>: 加密，保护数据的安全性，如密码加密之后再存储到数据库中，而非直接存贮明文密码</li><li><strong>Web Support</strong>：Web支持，可以非常容易的集成到Web环境中</li><li><strong>Caching</strong>: 缓存，比如用户登录之后，其用户信息以及所拥有的角色信息、权限信息不必再去查询，这样可以大大提高效率</li><li><strong>Concurrency</strong>:Shiro支持多线程应用的并发验证，即是：如一个线程中开启另一个线程，能把权限自动的传播过去</li><li><strong>Testing</strong>: 提供测试支持</li><li><strong>Run As</strong>: 允许一个用户假装为另一个用户（如果他们允许）的身份进行访问；</li><li><strong>Remember me</strong>: 记住我，这是一个常见的功能，即一次登陆之后，下次再来的话不需要登陆<h2 id="1-3、Shiro架构（外部）"><a href="#1-3、Shiro架构（外部）" class="headerlink" title="1.3、Shiro架构（外部）"></a>1.3、Shiro架构（外部）</h2>![[Pasted image 20210128152428.png]]</li><li><strong>Subject</strong>: 应用代码直接交互的对象是Subject，也就是说Shiro的对外核心就是Subject，Subject代表了当前的用户。</li><li><strong>Shiro SecurityManger</strong>: 安全管理器，即所有与安全相关的操作都回和SecurityManger交互，所有的Subject也都被Security Manger来管理。</li><li><strong>Realm</strong>：Shiro需要从Realm获取安全数据（如用户，角色，权限），就是说SecurityManger要验证用户身份，那麽他就需要从Realm中获取相应的用户来进行比较，来确定用户的身份是否合法；也需要从Realm得到用户相应的角色、权限，进行验证用户是否能够进行，可以把Realm堪称DataSource</li></ul><h2 id="1-4、Shiro架构（内部）"><a href="#1-4、Shiro架构（内部）" class="headerlink" title="1.4、Shiro架构（内部）"></a>1.4、Shiro架构（内部）</h2><p>![[Pasted image 20210128153425.png]]</p><h2 id="1-5、simpleTest"><a href="#1-5、simpleTest" class="headerlink" title="1.5、simpleTest"></a>1.5、simpleTest</h2><h3 id="1-5-1、新建maven项目并且导入pom文件"><a href="#1-5-1、新建maven项目并且导入pom文件" class="headerlink" title="1.5.1、新建maven项目并且导入pom文件"></a>1.5.1、新建maven项目并且导入pom文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="comment">&lt;!-- configure logging --&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jcl-over-slf4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span> </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.slf4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>slf4j-log4j12<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.21<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line">  <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>log4j<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.12<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-5-2、编写log4j的配置文件（log4j-properties）"><a href="#1-5-2、编写log4j的配置文件（log4j-properties）" class="headerlink" title="1.5.2、编写log4j的配置文件（log4j.properties）"></a>1.5.2、编写log4j的配置文件（log4j.properties）</h3><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger\=INFO,</span> <span class="string">stdout  </span></span><br><span class="line">  </span><br><span class="line"><span class="meta">log4j.appender.stdout\=org.apache.log4j.ConsoleAppender</span>  <span class="string"></span></span><br><span class="line"><span class="meta">log4j.appender.stdout.layout\=org.apache.log4j.PatternLayout</span>  <span class="string"></span></span><br><span class="line"><span class="meta">log4j.appender.stdout.layout.ConversionPattern\=%d</span> <span class="string">%p \[%c\] - %m %n  </span></span><br><span class="line">  </span><br><span class="line"><span class="attr">\#</span> <span class="string">General Apache libraries  </span></span><br><span class="line"><span class="meta">log4j.logger.org.apache\=WARN</span>  <span class="string"></span></span><br><span class="line">  </span><br><span class="line"><span class="attr">\#</span> <span class="string">Spring  </span></span><br><span class="line"><span class="meta">log4j.logger.org.springframework\=WARN</span>  <span class="string"></span></span><br><span class="line">  </span><br><span class="line"><span class="attr">\#</span> <span class="string">Default Shiro logging  </span></span><br><span class="line"><span class="meta">log4j.logger.org.apache.shiro\=INFO</span>  <span class="string"></span></span><br><span class="line">  </span><br><span class="line"><span class="attr">\#</span> <span class="string">Disable verbose logging  </span></span><br><span class="line"><span class="meta">log4j.logger.org.apache.shiro.util.ThreadContext\=WARN</span>  <span class="string"></span></span><br><span class="line"><span class="attr">log4j.logger.org.apache.shiro.cache.ehcache.EhCache\=WARN</span></span><br></pre></td></tr></table></figure><h3 id="1-5-3、编写shiro文件（shiro-ini）"><a href="#1-5-3、编写shiro文件（shiro-ini）" class="headerlink" title="1.5.3、编写shiro文件（shiro.ini）"></a>1.5.3、编写shiro文件（shiro.ini）</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">\[users\]  </span><br><span class="line"><span class="attr">root</span> = secret, admin  </span><br><span class="line"><span class="attr">guest</span> = guest, guest  </span><br><span class="line"><span class="attr">presidentskroob</span> = <span class="number">12345</span>, president  </span><br><span class="line"><span class="attr">darkhelmet</span> = ludicrousspeed, darklord, schwartz  </span><br><span class="line"><span class="attr">lonestarr</span> = vespa, goodguy, schwartz  </span><br><span class="line">  </span><br><span class="line">\[roles\]  </span><br><span class="line"><span class="attr">admin</span> = \*  </span><br><span class="line"><span class="attr">schwartz</span> = lightsaber:\*  </span><br><span class="line"><span class="attr">goodguy</span> = winnebago:drive:eagle5</span><br></pre></td></tr></table></figure><h3 id="1-5-4、编写主启动类（Quickstart）"><a href="#1-5-4、编写主启动类（Quickstart）" class="headerlink" title="1.5.4、编写主启动类（Quickstart）"></a>1.5.4、编写主启动类（Quickstart）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.apache.shiro.SecurityUtils;  </span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.authc.\*;  </span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.config.IniSecurityManagerFactory;  </span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.mgt.SecurityManager;  </span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.session.Session;  </span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.subject.Subject;  </span><br><span class="line"><span class="keyword">import</span> org.apache.shiro.util.Factory;  </span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;  </span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Quickstart</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">transient</span> Logger log = LoggerFactory.getLogger(Quickstart.class);  </span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line"> Factory&lt;SecurityManager&gt; factory = <span class="keyword">new</span> IniSecurityManagerFactory(<span class="string">&quot;classpath:shiro.ini&quot;</span>);  </span><br><span class="line"> SecurityManager securityManager = factory.getInstance();  </span><br><span class="line"> SecurityUtils.setSecurityManager(securityManager);  </span><br><span class="line">  </span><br><span class="line"> <span class="comment">// Now that a simple Shiro environment is set up, let&#x27;s see what you can do:  </span></span><br><span class="line">  </span><br><span class="line"> <span class="comment">// get the currently executing user: Subject currentUser = SecurityUtils.getSubject();  </span></span><br><span class="line">  </span><br><span class="line"> <span class="comment">// Do some stuff with a Session (no need for a web or EJB container!!!)  </span></span><br><span class="line"> Session session = currentUser.getSession();  </span><br><span class="line"> session.setAttribute(<span class="string">&quot;someKey&quot;</span>, <span class="string">&quot;aValue&quot;</span>);  </span><br><span class="line"> String value = (String) session.getAttribute(<span class="string">&quot;someKey&quot;</span>);  </span><br><span class="line"> <span class="keyword">if</span> (value.equals(<span class="string">&quot;aValue&quot;</span>)) &#123;  </span><br><span class="line">            log.info(<span class="string">&quot;session ==》 \[&quot;</span> \+ value + <span class="string">&quot;\]&quot;</span>);  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">// 判断当前的用户是否被认证  </span></span><br><span class="line"> <span class="keyword">if</span> (!currentUser.isAuthenticated()) &#123;  </span><br><span class="line">            <span class="comment">//Token 记住我  </span></span><br><span class="line"> UsernamePasswordToken token = <span class="keyword">new</span> UsernamePasswordToken(<span class="string">&quot;lonestarr&quot;</span>, <span class="string">&quot;vespa&quot;</span>);  </span><br><span class="line"> token.setRememberMe(<span class="keyword">true</span>);<span class="comment">//设置记住我  </span></span><br><span class="line"> <span class="keyword">try</span> &#123;  </span><br><span class="line">                currentUser.login(token);<span class="comment">//执行了登陆操作~  </span></span><br><span class="line"> &#125; <span class="keyword">catch</span> (UnknownAccountException uae) &#123;<span class="comment">//未知账户  </span></span><br><span class="line"> log.info(<span class="string">&quot;There is no user with username of &quot;</span> \+ token.getPrincipal());  </span><br><span class="line"> &#125; <span class="keyword">catch</span> (IncorrectCredentialsException ice) &#123;<span class="comment">//密码错误  </span></span><br><span class="line"> log.info(<span class="string">&quot;Password for account &quot;</span> \+ token.getPrincipal() + <span class="string">&quot; was incorrect!&quot;</span>);  </span><br><span class="line"> &#125; <span class="keyword">catch</span> (LockedAccountException lae) &#123;<span class="comment">//账户锁定（密码多次输错）  </span></span><br><span class="line"> log.info(<span class="string">&quot;The account for username &quot;</span> \+ token.getPrincipal() + <span class="string">&quot; is locked.  &quot;</span> +  </span><br><span class="line">                        <span class="string">&quot;Please contact your administrator to unlock it.&quot;</span>);  </span><br><span class="line"> &#125;  </span><br><span class="line">            <span class="comment">// ... catch more exceptions here (maybe custom ones specific to your application?  </span></span><br><span class="line"> <span class="keyword">catch</span> (AuthenticationException ae) &#123;  </span><br><span class="line">                <span class="comment">//unexpected condition?  error?  </span></span><br><span class="line"> &#125;  </span><br><span class="line">        &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//say who they are:  </span></span><br><span class="line"> <span class="comment">//print their identifying principal (in this case, a username): //存储信息  </span></span><br><span class="line"> log.info(<span class="string">&quot;User \[&quot;</span> \+ currentUser.getPrincipal() + <span class="string">&quot;\] logged in successfully.&quot;</span>);  </span><br><span class="line">  </span><br><span class="line"> <span class="comment">//test a role: 测试角色  </span></span><br><span class="line"> <span class="keyword">if</span> (currentUser.hasRole(<span class="string">&quot;schwartz&quot;</span>)) &#123;  </span><br><span class="line">            log.info(<span class="string">&quot;May the Schwartz be with you!&quot;</span>);  </span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            log.info(<span class="string">&quot;Hello, mere mortal.&quot;</span>);  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//简单判断  </span></span><br><span class="line"> <span class="comment">//test a typed permission (not instance-level)  </span></span><br><span class="line"> <span class="keyword">if</span> (currentUser.isPermitted(<span class="string">&quot;lightsaber:wield&quot;</span>)) &#123;  </span><br><span class="line">            log.info(<span class="string">&quot;You may use a lightsaber ring.  Use it wisely.&quot;</span>);  </span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            log.info(<span class="string">&quot;Sorry, lightsaber rings are for schwartz masters only.&quot;</span>);  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//复杂一点的判断  </span></span><br><span class="line"> <span class="comment">//a (very powerful) Instance Level permission:  </span></span><br><span class="line"> <span class="keyword">if</span> (currentUser.isPermitted(<span class="string">&quot;winnebago:drive:eagle5&quot;</span>)) &#123;  </span><br><span class="line">            log.info(<span class="string">&quot;You are permitted to &#x27;drive&#x27; the winnebago with license plate (id) &#x27;eagle5&#x27;.  &quot;</span> +  </span><br><span class="line">                    <span class="string">&quot;Here are the keys - have fun!&quot;</span>);  </span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;  </span><br><span class="line">            log.info(<span class="string">&quot;Sorry, you aren&#x27;t allowed to drive the &#x27;eagle5&#x27; winnebago!&quot;</span>);  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">        <span class="comment">//注销  </span></span><br><span class="line"> <span class="comment">//all done - log out!  </span></span><br><span class="line"> currentUser.logout();  </span><br><span class="line">  </span><br><span class="line"> System.exit(<span class="number">0</span>);  </span><br><span class="line"> &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-5-5、测试结果"><a href="#1-5-5、测试结果" class="headerlink" title="1.5.5、测试结果"></a>1.5.5、测试结果</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2021</span>-<span class="number">01</span>-<span class="number">28</span> <span class="number">16</span>:<span class="number">04</span>:<span class="number">14</span>,<span class="number">129</span> INFO [org.apache.shiro.session.mgt.AbstractValidatingSessionManager] - Enabling session validation scheduler... </span><br><span class="line"><span class="number">2021</span>-<span class="number">01</span>-<span class="number">28</span> <span class="number">16</span>:<span class="number">04</span>:<span class="number">15</span>,<span class="number">503</span> INFO [Quickstart] - session ==》 [aValue] </span><br><span class="line"><span class="number">2021</span>-<span class="number">01</span>-<span class="number">28</span> <span class="number">16</span>:<span class="number">04</span>:<span class="number">15</span>,<span class="number">504</span> INFO [Quickstart] - User [lonestarr] logged in successfully. </span><br><span class="line"><span class="number">2021</span>-<span class="number">01</span>-<span class="number">28</span> <span class="number">16</span>:<span class="number">04</span>:<span class="number">15</span>,<span class="number">504</span> INFO [Quickstart] - May the Schwartz be with you! </span><br><span class="line"><span class="number">2021</span>-<span class="number">01</span>-<span class="number">28</span> <span class="number">16</span>:<span class="number">04</span>:<span class="number">15</span>,<span class="number">504</span> INFO [Quickstart] - You may use a lightsaber ring.  Use it wisely. </span><br><span class="line"><span class="number">2021</span>-<span class="number">01</span>-<span class="number">28</span> <span class="number">16</span>:<span class="number">04</span>:<span class="number">15</span>,<span class="number">504</span> INFO [Quickstart] - You are permitted to <span class="string">&#x27;drive&#x27;</span> <span class="function">the winnebago with license <span class="title">plate</span> <span class="params">(id)</span> &#x27;eagle5&#x27;.  Here are the keys - have fun! </span></span><br></pre></td></tr></table></figure><h3 id="1-5-6、核心语句"><a href="#1-5-6、核心语句" class="headerlink" title="1.5.6、核心语句"></a>1.5.6、核心语句</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取当前用户</span></span><br><span class="line">Subject currentUser = SecurityUtils.getSubject();</span><br><span class="line"><span class="comment">//获取session</span></span><br><span class="line">Session session = currentUser.getSession();</span><br><span class="line"><span class="comment">//当前用户是否已经认证</span></span><br><span class="line">currentUser.isAuthenticated();</span><br><span class="line"><span class="comment">//获取用户储存信息</span></span><br><span class="line">currentUser.getPrincipal();</span><br><span class="line"><span class="comment">//测试角色</span></span><br><span class="line">currentUser.hasRole(<span class="string">&quot;schwartz&quot;</span>);</span><br><span class="line"><span class="comment">//权限判断</span></span><br><span class="line">currentUser.isPermitted(<span class="string">&quot;winnebago:drive:eagle5&quot;</span>);</span><br><span class="line"><span class="comment">//注销用户</span></span><br><span class="line">currentUser.logout();</span><br></pre></td></tr></table></figure><h2 id="1-6、SpringBoot-整合-shiro环境"><a href="#1-6、SpringBoot-整合-shiro环境" class="headerlink" title="1.6、SpringBoot 整合 shiro环境"></a>1.6、SpringBoot 整合 shiro环境</h2><h3 id="1-6-1、新建一个springboot项目并且导入依赖"><a href="#1-6-1、新建一个springboot项目并且导入依赖" class="headerlink" title="1.6.1、新建一个springboot项目并且导入依赖"></a>1.6.1、新建一个springboot项目并且导入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--  </span></span><br><span class="line"><span class="comment"> Subject 用户  </span></span><br><span class="line"><span class="comment"> SecurityManger 管理所有用户  </span></span><br><span class="line"><span class="comment"> Realm 链接数据库  </span></span><br><span class="line"><span class="comment">--&gt;</span>  </span><br><span class="line"><span class="comment">&lt;!--Shiro整合Spring的包--&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.shiro<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>shiro-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.7.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.12.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf.extras<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-extras-java8time<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.4.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span>  </span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-thymeleaf<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.4.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>==spring-boot-starter-thymeleaf==必须导入，否则再Controller层中将无法找到themplates下的页面，导致报404错误</p><h3 id="1-6-2、新建index-html-add-html以及update-html页面用来测试"><a href="#1-6-2、新建index-html-add-html以及update-html页面用来测试" class="headerlink" title="1.6.2、新建index.html,add.html以及update.html页面用来测试"></a>1.6.2、新建index.html,add.html以及update.html页面用来测试</h3><center style="font-size:18px">index.html</center><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">h</span>&gt;</span>首页<span class="tag">&lt;/<span class="name">h</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">th:text</span>\=<span class="string">&quot;$&#123;msg&#125;&quot;</span>\&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>\=<span class="string">&quot;@&#123;/user/add&#125;&quot;</span>\&gt;</span>add<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">th:href</span>\=<span class="string">&quot;@&#123;/user/update&#125;&quot;</span>\&gt;</span>update<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><center style="font-size:18px">add.html</center><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>add<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><center style="font-size:18px">update.html</center><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>update<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  </span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-6-3、建立Controler层来实现页面的跳转"><a href="#1-6-3、建立Controler层来实现页面的跳转" class="headerlink" title="1.6.3、建立Controler层来实现页面的跳转"></a>1.6.3、建立Controler层来实现页面的跳转</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyController</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toIndex</span><span class="params">(Model model)</span> </span>&#123;  </span><br><span class="line">        model.addAttribute(<span class="string">&quot;msg&quot;</span>, <span class="string">&quot;hello ,hiro&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/add&quot;)</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toAdd</span><span class="params">(Model model)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;user/add&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/user/update&quot;)</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toUpdate</span><span class="params">(Model model)</span> </span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;user/update&quot;</span>;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-4、新建UserRealm类（自定义Reaml类）"><a href="#1-6-4、新建UserRealm类（自定义Reaml类）" class="headerlink" title="1.6.4、新建UserRealm类（自定义Reaml类）"></a>1.6.4、新建UserRealm类（自定义Reaml类）</h3><blockquote><p style="color:orange">UserRealm类继承  AuthorizingRealm 并重写父类方法</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//自定义Realm    extends AuthorizingRealm  </span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserRealm</span> <span class="keyword">extends</span> <span class="title">AuthorizingRealm</span> </span>&#123;  </span><br><span class="line">    <span class="comment">//授权  </span></span><br><span class="line"> <span class="meta">@Override</span>  </span><br><span class="line"> <span class="function"><span class="keyword">protected</span> AuthorizationInfo <span class="title">doGetAuthorizationInfo</span><span class="params">(PrincipalCollection principalCollection)</span> </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;执行了\==》授权&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> <span class="keyword">null</span>; &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//认证  </span></span><br><span class="line"> <span class="meta">@Override</span>  </span><br><span class="line"> <span class="function"><span class="keyword">protected</span> AuthenticationInfo <span class="title">doGetAuthenticationInfo</span><span class="params">(AuthenticationToken authenticationToken)</span> <span class="keyword">throws</span> AuthenticationException </span>&#123;  </span><br><span class="line">        System.out.println(<span class="string">&quot;执行了\==》认证&quot;</span>);  </span><br><span class="line"> <span class="keyword">return</span> <span class="keyword">null</span>; &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-6-5、新建ShiroConfig配置类"><a href="#1-6-5、新建ShiroConfig配置类" class="headerlink" title="1.6.5、新建ShiroConfig配置类"></a>1.6.5、新建ShiroConfig配置类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span>  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShiroConfig</span> </span>&#123;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//ShiroFilterFactoryBean 3  </span></span><br><span class="line"> <span class="meta">@Bean</span>  </span><br><span class="line"> <span class="function"><span class="keyword">public</span> ShiroFilterFactoryBean <span class="title">getShiroFilterFactoryBean</span><span class="params">(<span class="meta">@Qualifier(&quot;securityManger&quot;)</span> DefaultWebSecurityManager defaultWebSecurityManager)</span></span>&#123;  </span><br><span class="line">        ShiroFilterFactoryBean bean = <span class="keyword">new</span> ShiroFilterFactoryBean();  </span><br><span class="line"> <span class="comment">//设置安全管理器  </span></span><br><span class="line"> bean.setSecurityManager(defaultWebSecurityManager);  </span><br><span class="line"> <span class="keyword">return</span> bean;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//DefaultWebSecurityManger   2  </span></span><br><span class="line"> <span class="meta">@Bean(name \= &quot;securityManger&quot;)</span>  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> DefaultWebSecurityManager <span class="title">defaultWebSecurityManager</span><span class="params">(<span class="meta">@Qualifier(&quot;userRealm&quot;)</span> UserRealm userRealm)</span></span>&#123;  </span><br><span class="line">        DefaultWebSecurityManager securityManager = <span class="keyword">new</span> DefaultWebSecurityManager();  </span><br><span class="line"> <span class="comment">//关联Realm  </span></span><br><span class="line"> securityManager.setRealm(userRealm);  </span><br><span class="line"> <span class="keyword">return</span> securityManager;  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//创建 Realm 对象，需要自定义 1 @Bean  </span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> UserRealm <span class="title">userRealm</span><span class="params">()</span></span>&#123;  </span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> UserRealm();  </span><br><span class="line"> &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p style="color:orange">注意点一：再重写配置类的时候需要给配置类添加@Configuration的注解<p style="color:orange">注意点二：代码的书写过程中按照顺序<br><span style="margin-left:30px">1.创建Rea<span><br><span style="margin-left:30px">2.创建DefaultWebSecurityManger<span><br><span style="margin-left:30px">3.创建ShiroFilterFactoryBean<span> <p style="color:orange">注意点三：因为已经将方法托管给spring容器,所以使用传参的方式来实现而不使用new的方式</blockquote><p> [Qualifier]<a href="https://blog.csdn.net/qq_36567005/article/details/80611139">https://blog.csdn.net/qq_36567005/article/details/80611139</a>)</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Shiro-框架-一）&quot;&gt;&lt;a href=&quot;#Shiro-框架-一）&quot; class=&quot;headerlink&quot; title=&quot;Shiro 框架(一）&quot;&gt;&lt;/a&gt;Shiro 框架(一）&lt;/h1&gt;&lt;h2 id=&quot;1-1、什么是Shiro？&quot;&gt;&lt;a href=&quot;#1-1、</summary>
      
    
    
    
    
  </entry>
  
</feed>
